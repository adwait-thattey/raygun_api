{
	"info": {
		"_postman_id": "fcc38f52-3c38-4c18-901e-c42dc269f3de",
		"name": "RayGun",
		"description": "## This is the collection of APIs for Techfesia2019 of IIIT Sri City",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Token Pair Obtain",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"password\":\"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "Submit username and password, get accessToken and refreshToken in return."
					},
					"response": [
						{
							"name": "User Token Pair Obtain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"password\":\"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/obtain/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"access\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\",\n  \"refresh\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"\n}"
						}
					]
				},
				{
					"name": "User Token Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49d5c21b-8879-4cbf-8299-d84a8d5c7f4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refresh\":\"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Submit refreshToken and get back another accessToken"
					},
					"response": [
						{
							"name": "User Token Refresh",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"refresh\":\"{{refresh_token}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNTY3LCJqdGkiOiJjNzE4ZTVkNjgzZWQ0NTQyYTU0NWJkM2VmMGI0ZGQ0ZSJ9.ekxRxgb9OKmHkfy-zs1Ro_xs1eMLXiR17dIDBVxeT-w\"\n}"
						}
					]
				},
				{
					"name": "Staff token pair obtain",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"{{staff_username}}\",\n\t\"password\":\"{{staff_password}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								""
							]
						},
						"description": "Same as user_token_pair_obtain\n<b>Staff Only</b>"
					},
					"response": [
						{
							"name": "Staff token pair obtain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{staff_username}}\",\n\t\"password\":\"{{staff_password}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/obtain/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"\n}"
						}
					]
				},
				{
					"name": "Staff Token Refresh",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refresh\":\"{{staff_refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Same as user_token_refresh\n<b>Staff Only</b>"
					},
					"response": [
						{
							"name": "Staff Token Refresh",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"refresh\":\"{{staff_refresh_token}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNTY3LCJqdGkiOiJjNzE4ZTVkNjgzZWQ0NTQyYTU0NWJkM2VmMGI0ZGQ0ZSJ9.ekxRxgb9OKmHkfy-zs1Ro_xs1eMLXiR17dIDBVxeT-w\"\n}"
						}
					]
				},
				{
					"name": "SuperUser Token Pair obtain",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"{{superuser_username}}\",\n\t\"password\":\"{{superuser_password}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								""
							]
						},
						"description": "Same as user_token_pair_obtain\n<b>Superuser Only</b>"
					},
					"response": [
						{
							"name": "SuperUser Token Pair obtain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{superuser_username}}\",\n\t\"password\":\"{{superuser_password}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/obtain/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"access\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\",\n  \"refresh\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"\n}"
						}
					]
				},
				{
					"name": "SuperUser Token Refresh",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refresh\":\"{{superuser_refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Same as user_token_pair_obtain\n<b>Superuser Only</b>"
					},
					"response": [
						{
							"name": "SuperUser Token Refresh",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"refresh\":\"{{superuser_refresh_token}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/refresh/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNTY3LCJqdGkiOiJjNzE4ZTVkNjgzZWQ0NTQyYTU0NWJkM2VmMGI0ZGQ0ZSJ9.ekxRxgb9OKmHkfy-zs1Ro_xs1eMLXiR17dIDBVxeT-w\"\n}"
						}
					]
				},
				{
					"name": "Revoke All Tokens (Sign Out from all devices)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								""
							]
						},
						"description": "Revokes the given refresh tokens signing out the user from perticular device.\n\nIf no token is provided in body, then all tokens related to user are deleted, signing out the user from everywhere."
					},
					"response": [
						{
							"name": "Revoke All Tokens (Sign out from Some Devices)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"tokens_deleted\":5\n}"
						}
					]
				},
				{
					"name": "Revoke one token (Signout from one device)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\":\"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/token/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"token",
								""
							]
						},
						"description": "Revokes a single refresh token. i.e. signs out the user from a perticular device. \nA PUT method instead of DELETE is used here as DELETE doesn't support payloads."
					},
					"response": [
						{
							"name": "Revoke one token (Signout from one device)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\":\"{{refresh_token}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/auth/token/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"auth",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"tokens_deleted\":1\n}"
						}
					]
				},
				{
					"name": "Test Auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/auth/hello/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"auth",
								"hello",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "382510a1-077a-463a-926f-8233fdacdb68",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a88c4c32-4eee-4756-90d2-422c55b1b410",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Users (Staff only)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{staff_access_token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users?limit=10",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "limit the number of entries"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get details of all the users.\nset <field>=<value> to filter based on that value ex: username=test\n\nset limit=x to show only x entries.\nThen set page=y to view page y.\nExample: if you set limit=3 and you want to view entry no. 7, then set page=3.\n\nIf you request for a page more than max no of pages, then expect the following response:\n\n400 Bad Request\n{\n\tmessage:\"This page does not exist\",\n\t\"pageSize\": 3,\n\t\"noOfPages\":5\n}\n"
					},
					"response": [
						{
							"name": "Get Users (Exceed Page Limit)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{staff_access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users?limit=10&page=100",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "limit the number of entries"
										},
										{
											"key": "page",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"message\":\"This page does not exist\",\n\t\"pageSize\":10,\n\t\"noOfPages\":5\n}"
						},
						{
							"name": "Get Users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{staff_access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users?limit=3&page=2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "3",
											"description": "limit the number of entries"
										},
										{
											"key": "page",
											"value": "2",
											"description": "page no"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"currentPage\": 2,\n\t\"noOfPages\":5,\n\t\"users\":[\n\t\t{\n\t\t\t\"publicId\":\"sampleId1\",\n\t\t\t\"username\":\"{{username}}\",\n\t\t\t\"firstName\":\"Test\",\n\t\t\t\"lastName\":\"User\",\n\t\t\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\t\t\"phoneNumber\":\"+911234567890\",\n\t\t\t\"collegeName\":\"Test College 123\",\n\t\t\t\"profilePicture\":\"url_to_profile_pic\",\n\t\t\t\"dateJoined\":\"date_time_in_iso_format\",\n\t\t\t\"lastLogin\":\"date_time_in_iso_format\"\n\t\t},\n\t\t\n\t\t{\n\t\t\t\"publicId\":\"sampleId2\",\n\t\t\t\"username\":\"test_user_002\",\n\t\t\t\"firstName\":\"Test\",\n\t\t\t\"lastName\":\"User2\",\n\t\t\t\"email\":\"test_user_002@testers.techfesia.iiits.in\",\n\t\t\t\"phoneNumber\":\"+911234567890\",\n\t\t\t\"collegeName\":\"Test College 123\",\n\t\t\t\"profilePicture\":\"url_to_profile_pic\",\n\t\t\t\"dateJoined\":\"date_time_in_iso_format\",\n\t\t\t\"lastLogin\":\"date_time_in_iso_format\"\n\t\t},\n\t\t{\n\t\t\t\"publicId\":\"sampleId3\",\n\t\t\t\"username\":\"test_user_003\",\n\t\t\t\"firstName\":\"Test\",\n\t\t\t\"lastName\":\"User\",\n\t\t\t\"email\":\"test_user_003@testers.techfesia.iiits.in\",\n\t\t\t\"phoneNumber\":\"+911234567890\",\n\t\t\t\"collegeName\":\"Test College 123\",\n\t\t\t\"profilePicture\":\"url_to_profile_pic\",\n\t\t\t\"dateJoined\":\"date_time_in_iso_format\",\n\t\t\t\"lastLogin\":\"date_time_in_iso_format\"\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get User details",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}"
							]
						},
						"description": "Get details of a perticular user. \nOnly the user herself or the staff/superuser can access this route"
					},
					"response": [
						{
							"name": "Get user details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"publicId\":\"sampleId123\",\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\",\n\t\"dateJoined\":\"date_time_in_iso_format\",\n\t\"lastLogin\":\"date_time_in_iso_format\"\n\t\n}"
						}
					]
				},
				{
					"name": "Get User State (Staff Only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{staff_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/privileges",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"privileges"
							]
						},
						"description": "Shows the state of a user.\nResponds with one of the following strings:\n<ul>\n\t<li>disabled</li>\n\t<li>normal</li>\n\t<li>staff</li>\n\t<li>superuser</li>\n<ul>\n\nIf the user is a staff, then also provides an array containing the permissions of the user on each model.\n\nNote that a disabled user can not do anything even if s(he) was a superuser."
					},
					"response": [
						{
							"name": "Get Staff User State",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{staff_access_token}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{staff_username}}/privileges",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{staff_username}}",
										"privileges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"state\":\"staff\",\n\t\"privileges\":{\n\t\t\"model_name\":[\"array\", \"of\", \"privileges\"],\n\t\t\"user\":[\"read\"],\n\t\t\"event\":[\"read\", \"create\", \"update\", \"delete\"],\n\t\t\"firebaseUser\":[]\n\t}\n}"
						},
						{
							"name": "Get User State",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{staff_access_token}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/privileges",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"privileges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"state\":\"normal\"\n}"
						},
						{
							"name": "Get SuperUser State (Staff Only)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{staff_access_token}}"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{superuser_username}}/privileges",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{superuser_username}}",
										"privileges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"state\":\"superuser\"\n}"
						}
					]
				},
				{
					"name": "Create New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"password\":\"{{password}}\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Create a new User. \nMandatory fields are:\n<ul>\n\t<li>username</li>\n\t<li>email</li>\n\t<li>password</li>\n</ul>"
					},
					"response": [
						{
							"name": "Create New User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"password\":\"{{password}}\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"publicId\": \"sampleId123\",\n    \"username\": \"{{username}}\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"email\": \"{{username}}@testers.techfesia.iiits.in\",\n    \"phoneNumber\": \"+911234567890\",\n    \"collegeName\": \"Test College 123\",\n    \"profilePicture\": \"url_to_profile_pic\",\n    \"dateJoined\": \"date_time_in_iso_format\",\n    \"lastLogin\": \"date_time_in_iso_format\"\n}"
						},
						{
							"name": "Create New User (Missing Required field)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"password\":\"{{password}}\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\":{\n\t\t\"username\":\"missing required field\"\n\t}\n}"
						},
						{
							"name": "Create New User (Username Exists)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"password\":\"{{password}}\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"errors\":{\n\t\t\t\"username\":\"This username already exists\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Update User Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						},
						"description": "updates a user's details.\nDo note that some fields might be immutable in which case a 422 will be returned\nAlso can not be used for updating password."
					},
					"response": [
						{
							"name": "Update User Details",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"firstName\":\"Test\",\n\t\"lastName\":\"User\",\n\t\"email\":\"{{username}}@testers.techfesia.iiits.in\",\n\t\"phoneNumber\":\"+911234567890\",\n\t\"collegeName\":\"Test College 123\",\n\t\"profilePicture\":\"url_to_profile_pic\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}"
									],
									"query": [
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"publicId\":\"sampleId123\",\n    \"username\": \"{{username}}\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"email\": \"{{username}}@testers.techfesia.iiits.in\",\n    \"phoneNumber\": \"+911234567890\",\n    \"collegeName\": \"Test College 123\",\n    \"profilePicture\": \"url_to_profile_pic\"\n}"
						}
					]
				},
				{
					"name": "Update profile picture (o-auth)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"provider\":\"google\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/picture",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"picture"
							]
						},
						"description": "Updates the user's profile picture from o-auth provider like google/github\nName of o-auth provider should be specified in the payload. If not specified, take the first default provider available.\n\nThrows 422 if o-auth is not enabled."
					},
					"response": [
						{
							"name": "Update profile picture (o-auth)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"provider\":\"google\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/picture",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"picture"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"message\":\"Profile Picture updated\"\n}"
						}
					]
				},
				{
					"name": "Disable User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/disable",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"disable"
							]
						},
						"description": "disables a user account, preventing him/her from logging in or perform any action"
					},
					"response": []
				},
				{
					"name": "Delete User (Staff Only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{staff_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								""
							]
						},
						"description": "Delete a user account. \n<b><i>\n<span style=\"color:red\">\nWarning: There is no way to recover data once this request is sent. Consider disabling the account instead.\n</span>\n</b></i>"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User Auth",
			"item": [
				{
					"name": "User Auth modes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/auth_modes",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"auth_modes"
							]
						},
						"description": "Tells which all auth modes are enabled for a user.\nTypically 2 modes will exist,\n<ul>\n\t<li>password (true or false)</li>\n\t<li>o-auth (as an array containing providers)</li>\n</ul>"
					},
					"response": [
						{
							"name": "User Auth modes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/auth_modes",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"auth_modes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"password\":true,\n\t\"o-auth\":[\n\t\t\t\"google\",\n\t\t\t\"github\",\n\t\t\t\"facebook\"\n\t\t]\n}"
						}
					]
				},
				{
					"name": "Create Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\":\"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"password",
								""
							]
						},
						"description": "creates a password for those users who are signed in via o-auth.\nWill throw 422 if user already has password based auth enabled."
					},
					"response": [
						{
							"name": "Create Password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\":\"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"password",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"message\":\"new password created\"\n}"
						}
					]
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"oldPassword\":\"old_passord\",\n\t\"newPassword\":\"new_password\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"password",
								""
							]
						},
						"description": "Changes the password of the user.\nWill throw a 422 if user is logged in via o-auth or if old password is incorrect."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"resetToken\":\"sampled_reset_token\",\n\t\"newPassword\":\"password\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host_name}}"
							],
							"path": [
								"users",
								"{{username}}",
								"password",
								""
							]
						},
						"description": "resets user password to a new password.\nUser must send a reset_token in payload that will most likely be emailed to him"
					},
					"response": [
						{
							"name": "Reset Password",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resetToken\":\"sampled_reset_token\",\n\t\"newPassword\":\"password\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"password",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"message\":\"Password reset successfully\"\n}"
						},
						{
							"name": "Reset Password (invalid token)",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"resetToken\":\"sampled_reset_token\",\n\t\"newPassword\":\"password\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host_name}}/users/{{username}}/password/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host_name}}"
									],
									"path": [
										"users",
										"{{username}}",
										"password",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"error\":{\n\t\t\"resetToken\":\"token is invalid, expired or already used. Please get a new token\"\n\t}\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6c168dbf-d24c-406b-b990-49c2ecd0f228",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f63fa63e-5c43-4073-b859-ff3e120dc441",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}